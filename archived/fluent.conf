<match fluent.**>
  @type null
</match>

# This source tails the logs that are created by the Docker json-file logging driver
<source>
  @type tail
  tag foo.docker.*
  path /var/lib/docker/containers/*/*-json.log
  pos_file /tmp/docker.pos
  format json
  refresh_interval 10s
  time_key time
  time_format %FT%T.%L
</source>

<match foo.docker.**>
  remove_tag_prefix foo
  type detect_exceptions
  message log
  languages all
  multiline_flush_interval 0.1
</match>

#This uses the Docker metadata plugin to enrich data
<filter docker.var.lib.docker.containers.*.*.log>
  type docker_metadata
</filter>

#This makes use of the ECS Metadata plugin to enrich records with ECS metadata
<filter **>
  type ecs_metadata
</filter>

#This copies the FluentD field log over to message for increased usability within the Kibana Discover page
<match docker.**>
  @type record_reformer
  renew_record false
  enable_ruby false
  tag logcopy
  <record>
    message ${log}
  </record>
</match>

#This drops unnecessary keys (just log in this example, but could be extended to others)
<match logcopy>
  @type record_reformer
  remove_keys log
  renew_record false
  enable_ruby false
  tag final
</match>

#This is for sending to a file for testing prior to sending to Logz.io
<match **>
  @type logzio_buffered
  @id out_logzio
  endpoint_url "#{ENV['LOGZIO_URL']}?token=#{ENV['LOGZIO_TOKEN']}"
  output_include_time true
  output_include_tags true
  <buffer>
    # Set the buffer type to file to improve the reliability and reduce the memory consumption
    @type file
    path /var/log/fluentd-buffers/stackdriver.buffer
    # Set queue_full action to block because we want to pause gracefully
    # in case of the off-the-limits load instead of throwing an exception
    overflow_action block
    # Set the chunk limit conservatively to avoid exceeding the GCL limit
    # of 10MiB per write request.
    chunk_limit_size 2M
    # Cap the combined memory usage of this buffer and the one below to
    # 2MiB/chunk * (6 + 2) chunks = 16 MiB
    queue_limit_length 6
    # Never wait more than 5 seconds before flushing logs in the non-error case.
    flush_interval 5s
    # Never wait longer than 30 seconds between retries.
    retry_max_interval 30
    # Disable the limit on the number of retries (retry forever).
    retry_forever true
    # Use multiple threads for processing.
    flush_thread_count 2
  </buffer>
</match>